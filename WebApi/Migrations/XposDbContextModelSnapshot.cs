// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.DataModels;

namespace WebApi.Migrations
{
    [DbContext(typeof(XposDbContext))]
    partial class XposDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApi.DataModels.Account", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("UserName");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            UserName = "admin",
                            Active = true,
                            FirstName = "Super",
                            Id = 1L,
                            LastName = "User",
                            Password = "admin1234"
                        },
                        new
                        {
                            UserName = "user1",
                            Active = true,
                            FirstName = "User",
                            Id = 2L,
                            LastName = "Satu",
                            Password = "user1234"
                        },
                        new
                        {
                            UserName = "user2",
                            Active = true,
                            FirstName = "User",
                            Id = 3L,
                            LastName = "Dua",
                            Password = "user1234"
                        });
                });

            modelBuilder.Entity("WebApi.DataModels.Book", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("KodeBuku")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NamaBuku")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("NamaPengarang")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("KodeBuku")
                        .IsUnique();

                    b.ToTable("Books");
                });

            modelBuilder.Entity("WebApi.DataModels.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Initial")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Initial")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Active = true,
                            CreateBy = "Admin",
                            CreateDate = new DateTime(2022, 8, 18, 14, 34, 56, 490, DateTimeKind.Local).AddTicks(5785),
                            Initial = "MainCo",
                            Name = "Main Course"
                        },
                        new
                        {
                            Id = 2L,
                            Active = true,
                            CreateBy = "Admin",
                            CreateDate = new DateTime(2022, 8, 18, 14, 34, 56, 491, DateTimeKind.Local).AddTicks(2880),
                            Initial = "Drink",
                            Name = "Drink"
                        },
                        new
                        {
                            Id = 3L,
                            Active = true,
                            CreateBy = "Admin",
                            CreateDate = new DateTime(2022, 8, 18, 14, 34, 56, 491, DateTimeKind.Local).AddTicks(2940),
                            Initial = "Dessert",
                            Name = "Dessert"
                        });
                });

            modelBuilder.Entity("WebApi.DataModels.FileCollection", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("FileName")
                        .IsUnique();

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("FileCollections");
                });

            modelBuilder.Entity("WebApi.DataModels.GroupJob", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Job")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("Job")
                        .IsUnique();

                    b.ToTable("GroupJobs");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Active = true,
                            Job = "Administrator"
                        },
                        new
                        {
                            Id = 2L,
                            Active = true,
                            Job = "Supervisor"
                        },
                        new
                        {
                            Id = 3L,
                            Active = true,
                            Job = "Staff"
                        },
                        new
                        {
                            Id = 4L,
                            Active = true,
                            Job = "Cashier"
                        });
                });

            modelBuilder.Entity("WebApi.DataModels.OrderDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("HeaderId")
                        .HasColumnType("bigint");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,4)");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("Id");

                    b.HasIndex("HeaderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("WebApi.DataModels.OrderHeader", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.HasKey("Id");

                    b.ToTable("OrderHeaders");
                });

            modelBuilder.Entity("WebApi.DataModels.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Initial")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Stock")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("VariantId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Initial")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("VariantId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Active = true,
                            CreateBy = "Admin",
                            CreateDate = new DateTime(2022, 8, 18, 14, 34, 56, 492, DateTimeKind.Local).AddTicks(5350),
                            Description = "Capcay seafood",
                            Initial = "NasCap",
                            Name = "Nasi Capcay",
                            Price = 25000m,
                            Stock = 10m,
                            VariantId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Active = true,
                            CreateBy = "Admin",
                            CreateDate = new DateTime(2022, 8, 18, 14, 34, 56, 492, DateTimeKind.Local).AddTicks(5436),
                            Description = "Dengan bumbu rempah",
                            Initial = "AyKal",
                            Name = "Ayam Kalasan",
                            Price = 26000m,
                            Stock = 10m,
                            VariantId = 3L
                        },
                        new
                        {
                            Id = 3L,
                            Active = true,
                            CreateBy = "Admin",
                            CreateDate = new DateTime(2022, 8, 18, 14, 34, 56, 492, DateTimeKind.Local).AddTicks(5439),
                            Description = "Dengan gula aren",
                            Initial = "KaMer",
                            Name = "Iced Kacang Merah",
                            Price = 18000m,
                            Stock = 10m,
                            VariantId = 4L
                        },
                        new
                        {
                            Id = 4L,
                            Active = true,
                            CreateBy = "Admin",
                            CreateDate = new DateTime(2022, 8, 18, 14, 34, 56, 492, DateTimeKind.Local).AddTicks(5441),
                            Description = "1/2 ekor",
                            Initial = "AyGor",
                            Name = "Ayam Goreng",
                            Price = 18000m,
                            Stock = 10m,
                            VariantId = 2L
                        });
                });

            modelBuilder.Entity("WebApi.DataModels.TransRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("GroupJobId")
                        .HasColumnType("bigint");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("GroupJobId", "Role")
                        .IsUnique();

                    b.ToTable("TransRoles");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            GroupJobId = 2L,
                            Role = "Category"
                        },
                        new
                        {
                            Id = 2L,
                            GroupJobId = 2L,
                            Role = "Variant"
                        },
                        new
                        {
                            Id = 3L,
                            GroupJobId = 2L,
                            Role = "Product"
                        },
                        new
                        {
                            Id = 4L,
                            GroupJobId = 2L,
                            Role = "Order"
                        },
                        new
                        {
                            Id = 5L,
                            GroupJobId = 3L,
                            Role = "Category"
                        },
                        new
                        {
                            Id = 6L,
                            GroupJobId = 3L,
                            Role = "Variant"
                        },
                        new
                        {
                            Id = 7L,
                            GroupJobId = 3L,
                            Role = "Product"
                        },
                        new
                        {
                            Id = 8L,
                            GroupJobId = 4L,
                            Role = "Order"
                        });
                });

            modelBuilder.Entity("WebApi.DataModels.UserRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("GroupJobId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("GroupJobId");

                    b.HasIndex("UserName", "GroupJobId")
                        .IsUnique();

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            GroupJobId = 1L,
                            UserName = "admin"
                        },
                        new
                        {
                            Id = 2L,
                            GroupJobId = 3L,
                            UserName = "user1"
                        },
                        new
                        {
                            Id = 3L,
                            GroupJobId = 4L,
                            UserName = "user2"
                        });
                });

            modelBuilder.Entity("WebApi.DataModels.Variant", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Initial")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("Initial")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Variants");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Active = true,
                            CategoryId = 1L,
                            CreateBy = "Admin",
                            CreateDate = new DateTime(2022, 8, 18, 14, 34, 56, 492, DateTimeKind.Local).AddTicks(3383),
                            Initial = "Paket Nasi",
                            Name = "Paket Nasi"
                        },
                        new
                        {
                            Id = 2L,
                            Active = true,
                            CategoryId = 1L,
                            CreateBy = "Admin",
                            CreateDate = new DateTime(2022, 8, 18, 14, 34, 56, 492, DateTimeKind.Local).AddTicks(3453),
                            Initial = "Ala Carte",
                            Name = "Ala Carte"
                        },
                        new
                        {
                            Id = 3L,
                            Active = true,
                            CategoryId = 1L,
                            CreateBy = "Admin",
                            CreateDate = new DateTime(2022, 8, 18, 14, 34, 56, 492, DateTimeKind.Local).AddTicks(3456),
                            Initial = "Favorite",
                            Name = "Favorite"
                        },
                        new
                        {
                            Id = 4L,
                            Active = true,
                            CategoryId = 2L,
                            CreateBy = "Admin",
                            CreateDate = new DateTime(2022, 8, 18, 14, 34, 56, 492, DateTimeKind.Local).AddTicks(3458),
                            Initial = "Iced",
                            Name = "Iced"
                        });
                });

            modelBuilder.Entity("WebApi.DataModels.OrderDetail", b =>
                {
                    b.HasOne("WebApi.DataModels.OrderHeader", "OrderHeader")
                        .WithMany()
                        .HasForeignKey("HeaderId");

                    b.HasOne("WebApi.DataModels.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApi.DataModels.Product", b =>
                {
                    b.HasOne("WebApi.DataModels.Variant", "Variant")
                        .WithMany()
                        .HasForeignKey("VariantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApi.DataModels.TransRole", b =>
                {
                    b.HasOne("WebApi.DataModels.GroupJob", "GroupJob")
                        .WithMany()
                        .HasForeignKey("GroupJobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApi.DataModels.UserRole", b =>
                {
                    b.HasOne("WebApi.DataModels.GroupJob", "GroupJob")
                        .WithMany()
                        .HasForeignKey("GroupJobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.DataModels.Account", "Account")
                        .WithMany()
                        .HasForeignKey("UserName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApi.DataModels.Variant", b =>
                {
                    b.HasOne("WebApi.DataModels.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
